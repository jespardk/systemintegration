@page "/dashboard"
@inject PowerMeasurementsService PowerMeasurementsService
@inject WeatherService WeatherService

@code {
    private ForecastAggregateResponse _weatherForecast;
    private PowerProductionResponse _powerProduction;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Ensure this is only triggered on first load - not every time the view is rerendered
            await LoadData();
            Console.WriteLine("After render OK");
        }

        await base.OnAfterRenderAsync(firstRender);
    }

    private async Task LoadData()
    {
        _weatherForecast = await WeatherService.GetForecastAsync();
        await InvokeAsync(() => StateHasChanged());

        _powerProduction = await PowerMeasurementsService.GetMeasurementsAsync();
        await InvokeAsync(() => StateHasChanged());
    }
}

<PowerProductionSubview PowerProduction="_powerProduction" />

<br />

<WeatherForecastSubview Forecast="_weatherForecast" />